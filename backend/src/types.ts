/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type MessageRole = "assistant" | "user";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Chat {
  created_at: Generated<Timestamp>;
  id: Generated<Int8>;
  person_id: Int8;
  title: string;
}

export interface Message {
  chat_id: Int8;
  content: string;
  created_at: Generated<Timestamp>;
  id: Generated<Int8>;
  model: string | null;
  role: MessageRole;
}

export interface Person {
  email: string;
  first_name: string;
  id: Generated<Int8>;
}

export interface RefreshToken {
  expires_at: Generated<Timestamp>;
  id: Generated<Int8>;
  person_id: Int8;
}

export interface DB {
  chat: Chat;
  message: Message;
  person: Person;
  refresh_token: RefreshToken;
}
